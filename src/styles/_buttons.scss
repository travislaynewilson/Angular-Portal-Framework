@import 'references';


.btn {
    display: inline-block;
    font-weight: $font-weight-medium;
    text-align: center;
    white-space: nowrap;
    vertical-align: middle;
    user-select: none;
    height: $btn-height;
    line-height: $btn-line-height;
    text-transform: uppercase;
    padding: $btn-padding-y $btn-padding-x;
    border-radius: $border-radius;
    cursor: pointer;
    border: $border-width solid transparent;
    @include hover-focus { text-decoration: none; }

    &:focus,
    &.focus { outline: 0; }

    &.disabled,
    &:disabled { cursor: not-allowed; pointer-events: none; }

    &:active,
    &.active { background-image: none; }
}


/* Disabled buttons (defined with <a> tags)
*******************************************/
a.btn.disabled,
fieldset[disabled] a.btn { pointer-events: none; cursor: not-allowed; }


/* Raised buttons
*******************************************/
.btn-raised { @include z-depth-1; }


/* Filled buttons
*******************************************/
@mixin btn-filled-theme($name, $color, $hoverColor) {
    &.btn-theme-#{$name} { background-color: $color; 
        @include hover-focus { background-color: $hoverColor;  }
        &:active,
        &.active,
        .show > &.dropdown-toggle { background-color: $hoverColor; }
    }
}
.btn-filled { color: color(white, primary);

    &:hover { color: color(white, primary); }

    &:active,
    &.active,
    .show > &.dropdown-toggle { background-image: none; }

    @include btn-filled-theme(text, color(black, secondary), color(black, primary));
    @include btn-filled-theme(success, color(intent, success), darken(color(intent, success), 15));
    @include btn-filled-theme(primary, color(primary), color(primary, hover));
    @include btn-filled-theme(warning, color(intent, warning), darken(color(intent, warning), 15));
    @include btn-filled-theme(danger, color(intent, danger), darken(color(intent, danger), 15));

    &:focus,
    &.focus { }

    &.disabled,
    &:disabled { background-color: color(black, state-bg); color: color(black, divider); }
}


/* Link buttons
*******************************************/
@mixin btn-link-theme($name, $color, $hoverColor, $disabledColor: color(black, divider)) {
    &.btn-theme-#{$name} { color: $color; 
        @include hover-focus { color: $hoverColor;  }
        &:disabled { color: $disabledColor; }
    }
}
.btn-link {
    border-radius: 0;

    &,
    &:active,
    &.active,
    &:disabled { background-color: transparent; }

    &,
    &:focus,
    &:active { box-shadow: none; }

    @include hover { border-color: transparent; }
    @include hover-focus { text-decoration: none; background-color: transparent; }

    &:disabled {
        @include hover-focus { text-decoration: none; }
    }

    @include btn-link-theme(text, color(black, secondary), color(black, primary));
    @include btn-link-theme(success, color(intent, success), darken(color(intent, success), 15));
    @include btn-link-theme(primary, color(primary), color(primary, hover));
    @include btn-link-theme(warning, color(intent, warning), darken(color(intent, warning), 15));
    @include btn-link-theme(danger, color(intent, danger), darken(color(intent, danger), 15));
}


/* Outline buttons
*******************************************/
@mixin btn-outline-theme($name, $color, $hoverColor, $disabledColor: color(black, divider)) {
    &.btn-theme-#{$name} { color: $color; border-color: $color;
        @include hover-focus { color: $hoverColor; border-color: $hoverColor; }
        &:disabled { color: $disabledColor; border-color: $disabledColor; }
    }
}
.btn-outline { color: $link-color; background-color: transparent; border: $border-width solid $link-color;

    &:hover { background-color: color(black, state-bg); }

    &:disabled {
        border-color: color(black, divider);
        color: color(black, divider);
        @include hover-focus { text-decoration: none; }
    }

    @include btn-outline-theme(text, color(black, secondary), color(black, primary));
    @include btn-outline-theme(success, color(intent, success), darken(color(intent, success), 15));
    @include btn-outline-theme(primary, color(primary), color(primary, hover));
    @include btn-outline-theme(warning, color(intent, warning), darken(color(intent, warning), 15));
    @include btn-outline-theme(danger, color(intent, danger), darken(color(intent, danger), 15));
}



/* Buttons with a single icon (no text)
*******************************************/
.btn-icon { width: $btn-height; border-radius: 50%; padding: gx(0.5);
    .icon { font-size: $btn-icon-size; }
}


/* Buttons with both text and icons
*******************************************/
.btn-combo { padding-left: gx(0.75);
    .icon { float: left; padding-right: gx(0.5); font-size: $btn-icon-size; }
}


/* Block buttons
*******************************************/
.btn-block { display: block; width: 100%; 
    + .btn-block { margin-top: $btn-block-spacing-y; }
}

input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}